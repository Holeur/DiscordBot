import discord
from discord.ext import commands
from discord.ext.commands import Bot
from discord.voice_client import VoiceClient
import asyncio
import time
import bestdllever
import os
import random
import selenium
from selenium import webdriver
from module1 import *
import pyscreenshot as ImageGrab
import pymysql
import math

try:
    kolbaskas_id = 259670108266430464
    TOKEN = os.getenv("BOT_TOKEN")
    intents = discord.Intents.all()
    bot = commands.Bot(command_prefix='!',intents=intents, help_command=None)
    #r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};'r'DBQ=DB.accdb;'

    #connect_str = (r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=F:\INFORMATIKA\SCIENCESHIT\Python\DiscordBot\DB.accdb;') 
    #connect_str = pymysql.connect(host="mulkovak.beget.tech",user ="mulkovak_test",passwd ="8W6o%R&B",db ="mulkovak_test")

    #OpenBD = pymysql.connect(connect_str) #–û—Ç–∫—Ä—ã–≤–∞–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –ø—Ä–æ–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    #BDCur = connect_str.cursor() #–û–±—å—è–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

    ALEX_BD_MAS = {}
    ALEX_BD_MAS['host'] = 'alexclown.beget.tech'
    ALEX_BD_MAS['database'] = 'alexclown_007'
    ALEX_BD_MAS['user'] = 'alexclown_007'
    ALEX_BD_MAS['password'] = 'R%Dy%5Ne'

    admin_names = []
    muted_names = []
    Users_stats = {}
    CLICKER_MESSAGES = []
    pointsMas = {}
    Attack_Timer_Mas = {} # {(id:time),(id:time)}
    alpNumbers = {"1Ô∏è‚É£":"1","0Ô∏è‚É£":"0","2Ô∏è":"2","3Ô∏è‚É£":"3","4Ô∏è‚É£":"4","5Ô∏è‚É£":"5","6Ô∏è‚É£":"6","7Ô∏è‚É£":"7","8Ô∏è‚É£":"8","9Ô∏è‚É£":"9","üá¶":"A","üáß":"B","üá®":"C","üá©":"D","üá™":"E","üá´":"F"}
    main_target_member = ""
    active_channel_id = ""
    main_guild = ""

    active_messages = {} # –ú–∞—Å—Å–∏–≤ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ USERID = [[MESID,TYPE],[MESID,TYPE]]

    host_os = str(os.getenv("BD_HOST"))
    user_os = os.getenv("BD_USER")
    pw_os = os.getenv("BD_PASSWORD")
    connect_str = pymysql.connect(host=host_os, user = user_os, passwd = pw_os, db ="sql6428571",port=3306) 
    
    def updateLocalActiveMes(): # –ò–°–ü–†–ê–í–ò–¢–¨ –ê–õ–ì–û–†–ò–¢–ú –°–ë–û–† –ê–ö–¢–ò–í–ù–´–• –°–û–û–ë–©–ï–ù–ò–ô
        global active_messages
        BDMessages = newExecute("select * from Messages")
        active_messages = []
        for message in BDMessages:
            active_messages.append([int(message[0]),int(message[1]),message[2]])
        print("Update succeceful: "+str(active_messages))

    def newExecute(command):
        global connect_str
        BDCur = connect_str.cursor() #–û–±—å—è–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

        #print(BDCur.connection)
        if BDCur.connection:
            print("–ü–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
            connect_str = pymysql.connect(host=host_os, user = user_os, passwd = pw_os, db ="sql6428571",port=3306)
            BDCur = connect_str.cursor() #–û–±—å—è–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print("–ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:"+str(command))
            
        BDCur.execute(command)
        data = BDCur.fetchall()
        print("–í—ã–≤–æ–¥:"+str(data))
        
        connect_str.commit()
        #BDCur.close()
        return data

    def timelog():
        return time.ctime(time.time())

    @bot.event
    async def on_ready(): # –ò–≤–µ–Ω—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
        loadMassivesFromBD()

        print("ADMINS:"+str(admin_names))
        print("MUTED_BOYS"+str(muted_names))
        print(bot.user.name)
        print(bot.user.id)
        print(bot.guilds)
        print('------')
#
# –¢–µ–∫—Å—Ç –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞
#
    @bot.command()
    async def sendMes(ctx,channelid,message):
        if ctx.author.id in admin_names:
            #target_server = bot.get_guild(int(serverid))
            target_channel = bot.get_channel(int(channelid))
            await target_channel.send(message)
        else:
            await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")


#
# –ù–ê–ô–¢–ò –¢–ï–ö–°–¢ –° –°–ò–ù–û–ù–ò–ú–ê–ú–ò
#

    @bot.command()
    async def get_sinonim(ctx,text):
        checkInPointsMas(ctx.author.id)
        browser = webdriver.Chrome()
        price = 10
        descr = "–æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ —Å–∏–Ω–æ–Ω–∏–º–∞–π–∑–µ—Ä–æ–º"

        if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
            browser.get("https://raskruty.ru/tools/synonymizer/")
            browser.find_element_by_xpath("//*[@id='textarea_i']").send_keys(text)
            browser.find_element_by_xpath("//*[@id='run']").click()
            time.sleep(1)
            result = browser.find_element_by_xpath("//*[@id='out']").text
            await ctx.send("```"+result+"```")

            spendPoints(ctx,price)
            await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
        else:
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))

# 
# –í–´–í–û–î –°–ü–ò–°–ö–ê –ö–û–ú–ê–ù–î
#

    @bot.command()
    async def help(ctx):
        mes = ""
        if "points" in ctx.message.content or "Points" in ctx.message.content:
            with open("helpMessages/helpPoints.txt","r",encoding="utf-8") as f:
                for line in f:
                    mes += line
                await ctx.send("```"+mes+"```")
        elif "admins" in ctx.message.content or "Admins" in ctx.message.content:
            with open("helpMessages/helpAdmins.txt","r",encoding="utf-8") as f:
                for line in f:
                    mes += line
                await ctx.send("```"+mes+"```")
        elif "voice" in ctx.message.content or "Voice" in ctx.message.content:
            with open("helpMessages/helpVoice.txt","r",encoding="utf-8") as f:
                for line in f:
                    mes += line
                await ctx.send("```"+mes+"```")
        elif "textchat" in ctx.message.content or "textChat" in ctx.message.content or "Textchat" in ctx.message.content or "TextChat" in ctx.message.content :
            with open("helpMessages/helpText.txt","r",encoding="utf-8") as f:
                for line in f:
                    mes += line
                await ctx.send("```"+mes+"```")
        #elif "other" in ctx.message.content:
        #    with open("helpMessages/helpother.txt","r",encoding="utf-8") as f:
        #        for line in f:
        #            mes += line
        #        await ctx.send("```"+mes+"```")
        else:
            with open("helpMessages/helpMain.txt","r",encoding="utf-8") as f:
                for line in f:
                    mes += line
                await ctx.send("```"+mes+"```")

#
# –ë–û–ï–í–ö–ê
#
    def loadStats():
        global Users_stats
        Users_stats = {}
        data = newExecute("select * from UserStats")
        for user in data:
            Users_stats[int(user[0])] = {"Damage":user[1],"Defence":user[2],"Speed":user[3]}
        print("Loaded from DB:",Users_stats)

    @bot.command()
    async def set_stat(ctx,slap,type,number): # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        global Users_stats
        if ctx.author.id in admin_names:
            target = ctx.guild.get_member(int(slap[3:slap.find(">")]))
            checkInPointsMas(target.id)
            Users_stats[target.id][str(type.title())] = int(number)
            newExecute("update UserStats set User"+str(type.title())+"="+number+" where UserID='"+str(target.id)+"';")
            print("stats mas updated:",Users_stats)
        else:
            await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")

    @bot.command()
    async def check_stat(ctx,slap): # –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—ã —é–∑–µ—Ä–∞
        global Users_stats
        target = ctx.guild.get_member(int(slap[3:slap.find(">")]))
        checkInPointsMas(target.id)
        await ctx.send("```"+str(target.name)+" - –ü–æ–∏–Ω—Ç—ã: "+str(pointsMas[target.id])+"\n\n–ê—Ç–∞–∫–∞: "+str(Users_stats[target.id]["Damage"])+"\n–ó–∞—â–∏—Ç–∞: "+str(Users_stats[target.id]["Defence"])+"\n–°–∫–æ—Ä–æ—Å—Ç—å: "+str(Users_stats[target.id]["Speed"])+"```")

    @bot.command()
    async def attack(ctx,name):
        global Attack_Timer_Mas,Users_stats
        try:
            target = ctx.guild.get_member(int(name[3:name.find(">")]))
            id = target.id

            #loadStats()

            target_stats = Users_stats[id]
            my_stats = Users_stats[ctx.author.id] # –ë–µ—Ä–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å—Ç–∞—Ç—ã —Ü–µ–ª–∏ –∏ –∞–≤—Ç–æ—Ä–∞

            print("taken stats from "+str(target.name)+" "+str(ctx.author.name)+": "+str(target_stats)+" "+str(my_stats))

            maxstolen = int(int(pointsMas[id]) / target_stats["Defence"])
            if maxstolen < 0:
                maxstolen = 0

            stolen_points = random.randint(0,maxstolen) 
            dice = random.randint(0,100)
            chance_to_win = math.ceil(50 * my_stats['Damage'] / target_stats['Defence']) # –®–∞–Ω—Å –ø–æ–±–µ–¥—ã

            if chance_to_win > 100:
                chance_to_win = 100
            elif chance_to_win < 0:
                chance_to_win = 0

            CD = 600 - my_stats['Speed'] # CoolDown
            price = 100
            descr = "–Ω–∞–ø–∞–¥–µ–Ω–∏–µ"
            StartTime = int(time.time())

            attacker_stat = "```"+str(ctx.author.name)+" - –ü–æ–∏–Ω—Ç—ã: "+str(pointsMas[ctx.author.id])+"\n\n–ê—Ç–∞–∫–∞: "+str(my_stats["Damage"])+"\n–ó–∞—â–∏—Ç–∞: "+str(my_stats["Defence"])+"\n–°–∫–æ—Ä–æ—Å—Ç—å: "+str(my_stats["Speed"])+"```"
            defender_stat = "```"+str(target.name)+" - –ü–æ–∏–Ω—Ç—ã: "+str(pointsMas[target.id])+"\n\n–ê—Ç–∞–∫–∞: "+str(target_stats["Damage"])+"\n–ó–∞—â–∏—Ç–∞: "+str(target_stats["Defence"])+"\n–°–∫–æ—Ä–æ—Å—Ç—å: "+str(target_stats["Speed"])+"```"

            if ctx.author.id not in Attack_Timer_Mas:
                Attack_Timer_Mas[ctx.author.id] = 0

            if StartTime >= Attack_Timer_Mas[ctx.author.id] + CD: # –î–≤–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–∏–Ω—Ç–æ–≤ –∏ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –ö–î
                if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price: 
                    first_stat = await ctx.send(attacker_stat)
                    main_mes = await ctx.send("```"+str(ctx.author.name)+" –Ω–∞–ø–∞–¥–∞–µ—Ç –Ω–∞ "+str(target.name)+"```")
                    second_stat = await ctx.send(defender_stat)
                    await ctx.send("```–®–ê–ù–° –ù–ê –ü–û–ë–ï–î–£: <<<"+str(chance_to_win)+"%>>> ( 50(–ë–ê–ó–ê) * "+str(my_stats["Damage"])+"(–£–†–û–ù –ù–ê–ü–ê–î–ê–Æ–©–ï–ì–û) / "+str(target_stats["Defence"])+"(–ë–†–û–ù–Ø –ó–ê–©–ò–©–ê–Æ–©–ï–ì–û–°–Ø) )\n–õ–£–ß–®–ï–ï –ù–ê–ü–ê–î–ï–ù–ò–ï –î–ê–°–¢ <<<"+str(maxstolen)+">>> –ü–û–ò–ù–¢–û–í ( "+str(pointsMas[id])+"(–ü–û–ò–ù–¢–´ –ó–ê–©–ò–©–ê–Æ–©–ï–ì–û–°–Ø) / "+str(target_stats["Defence"])+"(–ë–†–û–ù–Ø –ó–ê–©–ò–©–ê–Æ–©–ï–ì–û–°–Ø) )```")

                    for sec in range(1,4):
                        await main_mes.edit(content = "```"+str(ctx.author.name)+" –Ω–∞–ø–∞–¥–∞–µ—Ç –Ω–∞ "+str(target.name)+" –∏"+"."*sec+"```")
                        time.sleep(1)

                    if dice <= chance_to_win:
                        if pointsMas[id] >= stolen_points: # –ï—Å–ª–∏ —É —Ü–µ–ª–∏ –ø–æ–∏–Ω—Ç–æ–≤ –±–æ–ª—å—à–µ —Ä–æ–ª–∞ —Ç–æ...
                            pointsMas[ctx.author.id] += stolen_points
                            pointsMas[id] -= stolen_points

                            await main_mes.edit(content = "```"+str(ctx.author.name)+" –Ω–∞–ø–∞–¥–∞–µ—Ç –Ω–∞ "+str(target.name)+" –∏ <<<–ù–µ–≤–µ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç–±–∏—Ä–∞–µ—Ç "+str(stolen_points)+" –ø–æ–∏–Ω—Ç–æ–≤ —É "+str(target.name)+">>> ```")
                            await first_stat.edit(content=attacker_stat)
                            await second_stat.edit(content=defender_stat)
                            #await ctx.send(ctx.author.name+" –Ω–∞–ø–∞–ª –Ω–∞ "+ctx.guild.get_member(id).name+" –∏ —É–∫—Ä–∞–ª "+str(stolen_points)+" –ø–æ–∏–Ω—Ç–æ–≤")
                        else:
                            stolen_points = pointsMas[id]
                            pointsMas[ctx.author.id] += stolen_points
                            pointsMas[id] -= stolen_points

                            await main_mes.edit(content = "```"+str(ctx.author.name)+" –Ω–∞–ø–∞–¥–∞–µ—Ç –Ω–∞ "+str(target.name)+" –∏ <<<–í—ã—Ä—ã–≤–∞–µ—Ç —Å—Å–∞–Ω—ã–µ "+str(stolen_points)+" –ø–æ–∏–Ω—Ç–æ–≤ –∏–∑ –∫–∞—Ä–º–∞–Ω–∞ "+str(target.name)+">>> ```")
                            await first_stat.edit(content=attacker_stat)
                            await second_stat.edit(content=defender_stat)
                            #await ctx.send(ctx.author.name+" –Ω–∞–ø–∞–ª –Ω–∞ "+ctx.guild.get_member(id).name+" –∏ —É–∫—Ä–∞–ª "+str(stolen_points)+" –ø–æ–∏–Ω—Ç–æ–≤")
                    else:
                        await main_mes.edit(content = "```"+str(ctx.author.name)+" –Ω–∞–ø–∞–¥–∞–µ—Ç –Ω–∞ "+str(target.name)+" –∏ <<<–û–≥—Ä–µ–±–∞–µ—Ç –ø–æ –ø–æ–ª–Ω–æ–π –Ω–µ –ø–æ–ª—É—á–∞—è –Ω–∏—á–µ–≥–æ>>> ```")
                        #await ctx.send(ctx.author.name+" –Ω–∞–ø–∞–ª –Ω–∞ "+ctx.guild.get_member(id).name+" –∏ –Ω–µ —Å–º–æ–≥ —É–∫—Ä–∞—Å—Ç—å –ø–æ–∏–Ω—Ç—ã")
                    Attack_Timer_Mas[ctx.author.id] = StartTime
                    print(Attack_Timer_Mas)
                    spendPoints(ctx,price)
                    #updateTablePoints()
                    checkInPointsMas(ctx.author.id)
                    newExecute("Update Users set Points="+str(pointsMas[ctx.author.id])+",AttackTimer="+str(Attack_Timer_Mas[ctx.author.id])+" where id='"+str(ctx.author.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –∏ —Ç–∞–π–º–µ—Ä –≤ –ë–î
                    newExecute("Update Users set Points="+str(pointsMas[id])+",AttackTimer="+str(Attack_Timer_Mas[id])+" where id='"+str(id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –∏ —Ç–∞–π–º–µ—Ä –≤ –ë–î

                    #connect_str.commit()

                    await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
                else:
                    await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
            else:
                await ctx.send("–£ "+str(ctx.author.name)+" –µ—â–µ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –∞—Ç–∞–∫–∏ "+str(time.strftime("%H-%M-%S",time.gmtime((StartTime-Attack_Timer_Mas[ctx.author.id]-CD)*-1))))
                print(Attack_Timer_Mas)
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def removeTimer(ctx,name):
        try:
            if ctx.author.id in admin_names:
                target_id = int(name[3:name.find(">")])

                if target_id in Attack_Timer_Mas:
                    del Attack_Timer_Mas[target_id]
                    await ctx.send("–£ "+str(ctx.guild.get_member(target_id).name)+" –±—ã–ª —Å–±—Ä–æ—à–µ–Ω —Ç–∞–π–º–µ—Ä")
                else:
                    await ctx.send("–£ "+str(ctx.guild.get_member(target_id).name)+" –Ω–µ—Ç—É —Ç–∞–π–º–µ—Ä–∞")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

#
# –°–ò–°–¢–ï–ú–ê –ü–û–ò–ù–¢–û–í
#
    def loadMassivesFromBD(): # –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ, –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ —Å–æ–±–∏—Ä–∞–µ—Ç —Å—Ç—Ä–æ–∫–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞—Ç–∫–Ω–µ—Ç—Å—è –Ω–∞ –ø—É—Å—Ç—É—é
        tempMas = newExecute("select id,points,AttackTimer,Admin,Chat_muted from Users")
        for user in tempMas:
            pointsMas[int(user[0])] = user[1]
            Attack_Timer_Mas[int(user[0])] = user[2]
            if user[3] == True:
                admin_names.append(int(user[0]))
            if user[4] == True:
                muted_names.append(int(user[0]))

        tempMas = newExecute("select UserID,UserDamage,UserDefence,UserSpeed from UserStats")
        for user in tempMas:
            Users_stats[int(user[0])] = {'Damage':int(user[1]),'Defence':int(user[2]),'Speed':int(user[3])}
        print("Masives update:")
        print(pointsMas)
        print(Attack_Timer_Mas)
        print(Users_stats)
        print("------------")

    #def updateTablePoints(): # –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –¢–ê–ë–õ–ò–¶–£ –ø–æ –°–õ–û–í–ê–†–Æ.

    def checkInPointsMas(id): 
        if id not in pointsMas:
            pointsMas[id] = 0
            Users_stats[id] = {"Damage":0,"Defence":0,"Speed":0}
            newExecute("Insert into Users(ID,Name,AttackTimer,Points,Admin,Chat_muted) values ('"+str(id)+"','"+str(bot.get_user(id).name)+"',0,0,0,0);")
            newExecute("Insert into UserStats(UserID,UserDamage,UserDefence,UserSpeed) values ('"+str(id)+"',1,1,1);")
            #connect_str.commit()

    @bot.command()
    async def send_points(ctx,name,amount):
        amount = int(amount)
        try:
            tar_id = ctx.guild.get_member(int(name[3:name.find(">")])).id
            checkInPointsMas(ctx.author.id)
            checkInPointsMas(tar_id)
        except Exception as e:
            await ctx.send(e)

        if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= amount:
            pointsMas[ctx.author.id] -= amount
            pointsMas[tar_id] += amount
            #updateTablePoints()
            newExecute("Update Users set Points="+str(pointsMas[ctx.author.id])+" where id='"+str(ctx.author.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
            newExecute("Update Users set Points="+str(pointsMas[tar_id])+" where id='"+str(tar_id)+"';")
            #connect_str.commit()

            print(str(ctx.author.name)+" –ø–µ—Ä–µ–¥–∞–ª "+str(ctx.guild.get_member(tar_id).name)+" "+str(amount)+" –ø–æ–∏–Ω—Ç–æ–≤")
            await ctx.send(str(ctx.author.name)+" –ø–µ—Ä–µ–¥–∞–ª "+str(ctx.guild.get_member(tar_id).name)+" "+str(amount)+" –ø–æ–∏–Ω—Ç–æ–≤")
        else:
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤")

    @bot.command()
    async def dai_point(ctx):
        if ctx.author.id not in pointsMas:
            checkInPointsMas(ctx.author.id)
            pointsMas[ctx.author.id] = 500
            newExecute("Update Users set Points="+str(pointsMas[ctx.author.id])+" where id='"+str(ctx.author.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
            #connect_str.commit()
            await ctx.send("–ü–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å–ø–∏—à–∏—Ç–µ—Å—å")
        else:
            await ctx.send("–ü–æ–∏–Ω—Ç—ã —É–∂–µ –ø–æ–ª—É—á–µ–Ω—ã")

    @bot.command()
    async def points_leaders(ctx):
        mainmes = "```"
        mainmes += "–°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤:\n"
        row = 1
        fakemas = dict(sorted(pointsMas.items(), key=lambda x: x[1], reverse =True)) # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–∞—Å–∏–≤–∞ –∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –Ω–æ–≤—ã–π
        for id in fakemas:
            mainmes += str(row)+") "+ctx.guild.get_member(id).name+" "+str(round(fakemas[id],2))+"\n"
            row += 1
        mainmes += "```"
        await ctx.send(mainmes)

    @bot.command()
    async def give_points(ctx,name,point):
        try:
            if ctx.author.id in admin_names:
                target_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                checkInPointsMas(target_member.id)
                points = int(point)

                pointsMas[target_member.id] = pointsMas[target_member.id] + points
                newExecute("Update Users set Points="+str(pointsMas[target_member.id])+" where id='"+str(target_member.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
                #connect_str.commit()

                print(timelog()+" –í—ã–¥–∞—á–∞ "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
                print(pointsMas)
                await ctx.send("–í—ã–¥–∞—á–∞ "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def remove_points(ctx,name,point):
        try:
            if ctx.author.id in admin_names:
                target_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                checkInPointsMas(target_member.id)
                points = int(point)

                pointsMas[target_member.id] = pointsMas[target_member.id] - points
                newExecute("Update Users set Points="+str(pointsMas[target_member.id])+" where id='"+str(target_member.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
                #connect_str.commit()

                print(timelog()+" –°–Ω—è—Ç–∏–µ —É "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
                print(pointsMas)
                await ctx.send("–°–Ω—è—Ç–∏–µ —É "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def set_points(ctx,name,point):
        try:
            if ctx.author.id in admin_names:
                target_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                checkInPointsMas(target_member.id)
                points = int(point)

                pointsMas[target_member.id] = points
                newExecute("Update Users set Points="+str(pointsMas[target_member.id])+" where id='"+str(target_member.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
                #connect_str.commit()

                print(timelog()+" –¢–µ–ø–µ—Ä—å —É "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
                print(pointsMas)
                await ctx.send("–¢–µ–ø–µ—Ä—å —É "+target_member.name+" "+str(points)+" –æ—á–∫–æ–≤")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def check_points(ctx,name):
        try:
            target_member = ctx.guild.get_member(int(name[3:name.find(">")]))
            if target_member.id in pointsMas:
                await ctx.send("–£ "+str(target_member.name)+" "+str(round(pointsMas[target_member.id],2))+" –æ—á–∫–æ–≤")
            else:
                await ctx.send("–£ "+str(target_member.name)+" –Ω–µ—Ç—É –æ—á–∫–æ–≤")
        except Exception as e:
            await ctx.send(e)


    def spendPoints(ctx,amount):
        try:
            if ctx.author.id in pointsMas:
                if pointsMas[ctx.author.id] >= amount:
                    pointsMas[ctx.author.id] -= amount
                    checkInPointsMas(ctx.author.id)
                    newExecute("Update Users set Points="+str(pointsMas[ctx.author.id])+" where id='"+str(ctx.author.id)+"';") # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∏–Ω—Ç—ã –≤ –ë–î
                    #connect_str.commit()

                    print(ctx.author.name+" –ø–æ—Ç—Ä–∞—Ç–∏–ª "+str(amount)+" –ø–æ–∏–Ω—Ç–æ–≤")
                    return True
                else:
                    print(ctx.author.name+" –ù–ï –ø–æ—Ç—Ä–∞—Ç–∏–ª "+str(amount)+" –ø–æ–∏–Ω—Ç–æ–≤")
                    return False
            else:
                print(ctx.author.name+" –ù–ï –ø–æ—Ç—Ä–∞—Ç–∏–ª "+str(amount)+" –ø–æ–∏–Ω—Ç–æ–≤")
                return False
        except Exception as e:
            print(e)


#
# –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï –ë–û–¢–ê –° –í–û–ô–°–û–ú
#

    @bot.command()
    async def join(ctx): # –§—É–Ω–∫—Ü–∏—è –ø–æ –≤—Ö–æ–¥—É –Ω–∞ –∫–∞–Ω–∞–ª
        try:
            global vc
            try: # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –±–æ—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–π—Ç–∏ –∏ –∑–∞–π—Ç–∏ 
                channel = ctx.author.voice.channel # –í—ã–±–∏—Ä–∞–µ—Ç—Å—è –æ–±—å–µ–∫—Ç –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞–ø—Ä–æ—Å–∏–≤—à–∏–π
                active_channel_id = channel.id
                print("Connected to "+str(active_channel_id)) 
                vc = await channel.connect()
                vc.play(discord.FFmpegPCMAudio(source="soundOnJoin.mp3"))
            except Exception as e:
                print(e)
                await ctx.voice_client.disconnect()
                channel = ctx.author.voice.channel
                active_channel_id = channel.id
                print("Connected to "+str(active_channel_id)) 
                vc = await channel.connect()
                vc.play(discord.FFmpegPCMAudio(source="soundOnJoin.mp3"))
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def leave(ctx):
        try:
            if ctx.voice_client != None: # –£—Å–ª–æ–≤–∏–µ –Ω–∞–ª–∏—á–∏–µ –∫–∞–Ω–∞–ª–∞ —É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ 
                print("Disconnected from channel")
                await ctx.voice_client.disconnect()
                vc = None
            else:
                await ctx.send("–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ")
        except Exception as e:
            await ctx.send(e)

#
# –ê–î–ú–ò–ù–ö–ê
#

    @bot.command()
    async def admilist(ctx):
        mes = "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤: \n"
        for elem in admin_names:
            mes += ctx.guild.get_member(elem).name+", "
        mes = mes[:len(mes)-2]
        await ctx.send("```"+mes+"```")

    @bot.command()
    async def give_admin(ctx,name):
        try:
            if ctx.author.id in admin_names:
                admin_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                if admin_member.id != kolbaskas_id: 
                    if admin_member.id not in admin_names:
                        checkInPointsMas(admin_member.id)
                        admin_names.append(admin_member.id)
                        newExecute("Update Users set Admin=True where id='"+str(admin_member.id)+"';")
                        #connect_str.commit()
                        await ctx.send(admin_member.name+" –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤")
                    else:
                        await ctx.send(admin_member.name+" —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤")
                else:
                    await ctx.send("–ë–æ–∂–µ—Å—Ç–≤–æ –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –≤–∞—à–∏—Ö –ø–æ–¥–∞—á–∫–∞—Ö")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def remove_admin(ctx,name):
        try:
            if ctx.author.id in admin_names:
                admin_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                if admin_member.id != kolbaskas_id:
                    if admin_member.id in admin_names:
                        checkInPointsMas(admin_member.id)
                        admin_names.remove(admin_member.id)
                        newExecute("Update Users set Admin=False where id='"+str(admin_member.id)+"';")
                        #connect_str.commit()
                        await ctx.send(admin_member.name+" –±—ã–ª —É–±—Ä–∞–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤")
                    else:
                        await ctx.send(admin_member.name+" –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤")
                else:
                    await ctx.send("–ö–∞–∫ –≤—ã –ø–æ—Å–º–µ–ª–∏ –æ—Ç–æ–±—Ä–∞—Ç—å —Å–∏–ª—É —É –±–æ–≥–∞?")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send(e)

#
# BOTSUS
#

    @bot.command()
    async def get_target(ctx, name):  
        global main_target_member
        try:
            price = 100
            descr = "–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–µ–ª–∏ –æ–±—â–µ–≥–æ –º—É—Ç–∞"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                main_target_member = ctx.guild.get_member(int(name[3:name.find(">")]))
                print(name)

                if main_target_member != None:
                    print(main_target_member.id)
                    await ctx.send(main_target_member.name+" –∑–∞–∫—Ä–µ–ø–ª–µ–Ω")
                else:
                    await ctx.send(name+" –Ω–µ –Ω–∞–π–¥–µ–Ω")

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command()  
    async def clear_target(ctx):  
        global main_target_member
        try:
            price = 10
            descr = "—Å–Ω—è—Ç–∏–µ —Ü–µ–ª–∏ –æ–±—â–µ–≥–æ –º—É—Ç–∞"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                if main_target_member != "":
                    await ctx.send(main_target_member.name+" –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω")
                else:
                    await ctx.send("–ù–∏–∫—Ç–æ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω")
                main_target_member = ""

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

#
# –ú–ï–õ–ö–ò–ï –§–ò–ß–ò
#

    def is_me(m):
        try:
            return m.author == bot.user or m.content[0] == "!"
        except:
            return False

    @bot.command()
    async def clear_shit(ctx): # –û—á–∏—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ –∏–ª–∏ –∫–æ–º–∞–Ω–¥
        price = 1
        descr = "–æ—á–∏—Å—Ç–∫—É —á–∞—Ç–∞"
        limits = 100

        if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
            BD_Mes = newExecute("select MesID from Messages")

            ALLMessages = await ctx.channel.history(limit=limits).flatten() # –°–æ–±–∏—Ä–∞—é—Ç—Å—è –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –∏–∑ –±–¥ –∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ.
            for mes in ALLMessages:
                for BD_message in BD_Mes:
                    #print(BD_message[0],mes.id)
                    if int(mes.id) == int(BD_message[0]): # –ù–∞—Ö–æ–¥—è—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è, –∏–º–µ—é—â–∏–µ—Å—è –≤ –ë–î –∏ —É–¥–∞–ª—è—é—Ç—Å—è
                        #print("----------")
                        #print("-TARGETED-")
                        #print("----------")
                        newExecute("delete from Messages where MesID='"+str(mes.id)+"';") 

            #print(BD_Mes,ALLMessages)
            await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            await ctx.channel.purge(check=is_me,limit=limits) # –ü–æ—Å–ª–µ —É–¥–∞–ª—è—é—Ç—Å—è –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            spendPoints(ctx,price)
        else:
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))

    @bot.command()
    async def stealth_mute(ctx,id): # –§—É–Ω–∫—Ü–∏—è —Ç–∏—Ö–æ–≥–æ –º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ\
        try:
            price = 500
            descr = "–º—É—Ç —á–µ–ª–æ–≤–µ–∫–∞ –≤ —á–∞—Ç–µ"
            checkInPointsMas(int(id[3:id.find(">")]))

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                target_member = ctx.guild.get_member(int(id[3:id.find(">")])) # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ—è–µ—Ç—Å—è –ø–æ —Å–ª–∞–ø—É –≤ –¥–∏—Å–∫–æ—Ä–¥–µ
                if target_member.id != kolbaskas_id:

                    if target_member.name not in muted_names:
                        muted_names.append(target_member.id)
                        newExecute("update Users set Chat_muted=True where id='"+str(target_member.id)+"';")
                        #connect_str.commit()
                        await ctx.send("–ö—Ç–æ —ç—Ç–æ—Ç –≤–∞—à "+str(target_member.name))
                        print("muted_names updated: "+str(muted_names))
                    else:
                        await ctx.send(target_member.name+" —É–∂–µ –ø–æ–º–∞–ª–∫–∏–≤–∞–µ—Ç —Å–∏–¥–∏—Ç")
                else:
                    await ctx.send("–ß—Ç–æ? –ù–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª")

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def stealth_unmute(ctx,id): # –§—É–Ω–∫—Ü–∏—è —Ç–∏—Ö–æ–≥–æ –∞–Ω–º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
        try:
            price = 50
            descr = "—Å–Ω—è—Ç–∏–µ –º—É—Ç–∞ —á–∞—Ç–∞"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                target_member = ctx.guild.get_member(int(id[3:id.find(">")])) # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–µ—è–µ—Ç—Å—è –ø–æ —Å–ª–∞–ø—É –≤ –¥–∏—Å–∫–æ—Ä–¥–µ
                if target_member.id != kolbaskas_id:
                    if target_member.id in muted_names:
                        del muted_names[muted_names.index(target_member.id)]
                        newExecute("update Users set Chat_muted=False where id='"+str(target_member.id)+"';")
                        #connect_str.commit()
                        print("muted_names updated: "+str(muted_names))
                        await ctx.send(target_member.name+" –≤–µ—Ä–Ω—É–ª—Å—è –≤ —Å–µ–ª–æ –Ω–∞—Ç—É—Ä–∞–ª–æ–≤")
                    else:
                        await ctx.send(target_member.name+" –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–µ –∫–ª–æ—É–Ω–æ–≤")
                else:
                    await ctx.send("–ß—Ç–æ? –ù–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª")

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def smile_frase(ctx,font_smile,text_smile,frase): # –§—É–∫–Ω—Ü–∏—è –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é —Å–º–∞–π–ª–∏–∫–∞–º–∏
        try:
            price = 50
            descr = "—Å–æ–∑–¥–∞–Ω–∏–µ —Ñ—Ä–∞–∑—ã –∏–∑ —Å–º–∞–π–ª–∏–∫–æ–≤"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                mas_lines = []
                mas_lines.append(font_smile+font_smile+font_smile+font_smile+font_smile+font_smile)
                print("–í—ã–±—Ä–∞–Ω–∞ —Ñ—Ä–∞–∑–∞: "+str(frase))
            
                for elem in frase: # –ü–æ –∫–∞–∂–¥–æ–π –±—É–∫–≤–µ –≤ —Ñ—Ä–∞–∑–µ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ 
                    mas = printLetter(font_smile,text_smile,elem) # –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –±—É–∫–≤—ã
                    for line in mas:
                        mas_lines.append(line)
                    mas_lines.append(font_smile+font_smile+font_smile+font_smile+font_smile+font_smile) # –î–æ–±–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–∞ –º–µ–∂–¥—É –±—É–∫–≤–∞–º–∏ –¥–ª—è –≤–∏–¥–∏–º–æ—Å—Ç–∏
                mes = ""

                for line in mas_lines: # –ü–æ –∫–∞–∂–¥–æ–π –ª–∏–Ω–∏–∏ –≤ –º–∞—Å–∏–≤–µ –ª–∏–Ω–∏–π —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
                    mes += line + "\n"
                    print(len(mes))
                    if len(mes) >= 200: # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 200 —Å–∏–º–≤–æ–ª–æ–≤, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
                        print("–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ 200 —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
                        await ctx.send(mes)
                        mes = ""
                await ctx.send(mes) # –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command()
    async def flip_channels(ctx,number_tryes): # –§—É–Ω–∫—Ü–∏—è –ø–æ –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–Ω–∏—é –ª—é–¥–µ–π –≤ –∫–∞–Ω–∞–ª–µ
        try:
            price = 300
            descr = "—Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–µ—Ä–µ–±—Ä–æ—Å –ª—é–¥–µ–π –≤ –∫–∞–Ω–∞–ª–µ"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                try:
                    channel = ctx.author.voice.channel
                    list_boys = channel.members
                    list_channels = ctx.author.guild.voice_channels
                    print("–ù–∞ —Å–µ—Ä–≤–∞–∫–µ –Ω–∞—á–∞—Ç –∫—Ä–∏–Ω–∂ —Å –ø–æ–ø—É–ª—è—Ü–∏–µ–π –∏–∑ "+str(len(list_boys))+" —á–µ–ª–æ–≤–µ–∫ –Ω–∞ –∫–∞–Ω–∞–ª–µ")
                    await ctx.send("–ù–∞—á–∏–Ω–∞—é –∫—Ä–∏–Ω–∂")
                    for tr in range(0,int(number_tryes)): # –¶–∏–∫–ª –ø–µ—Ä–µ–±—Ä–æ—Å–æ–≤ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–∞–∑
                        for boy in list_boys:
                            max = len(list_channels)-1
                            target_channel = list_channels[random.randint(0,max)]
                            print("–ú–∏—Å—Ç–µ—Ä "+str(boy.name)+" –ª–µ—Ç–∏—Ç –≤ "+str(target_channel.name))
                            await boy.move_to(target_channel,reason="–£—Å—Ç—Ä–æ–µ–Ω –∫—Ä–∏–Ω–∂") # –ë–µ—Ä–µ—Ç—Å—è —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ –º–∞–∫—Å–∏–º—É–º–∞ –º–∞—Å—Å–∏–≤–∞ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –∏ –ø–æ —ç—Ç–æ–º—É –∏–Ω–¥–µ–∫—Å—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ —Å–ø–∏—Å–∫—É
                    await ctx.send("–ö—Ä–∏–Ω–∂ –∑–∞–∫–æ–Ω—á–µ–Ω")

                    spendPoints(ctx,price)
                    await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
                except Exception as e:
                    print(e)
                    await ctx.send("–ê–≤—Ç–æ—Ä, –Ω–∞ –∫–∞–Ω–∞–ª –∑–∞–π–¥–∏")
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command() # –û—Ç–¥–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –º—É—Ç–∞
    async def mute(ctx,id_name):
        try:
            name = ctx.guild.get_member(int(id_name[3:id_name.find(">")])).name
            price = 100
            descr = "–º—É—Ç —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                print("Member name: "+str(name))
                print("Member id: "+str(ctx.guild))
                print("Server id: "+str(ctx.message.guild.id))
                member = ctx.guild.get_member_named(name)
                if not member:
                    await ctx.send('–ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ')
                    return
                else:
                    await member.edit(mute = True)

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)

    @bot.command() # –û—Ç–¥–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∞–Ω–º—É—Ç–∞
    async def unmute(ctx,id_name):
        try:
            name = ctx.guild.get_member(int(id_name[3:id_name.find(">")])).name
            price = 10
            descr = "—Å–Ω—è—Ç–∏–µ –º—É—Ç–∞ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
            checkInPointsMas(ctx.author.id)

            if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
                print("Member name: "+str(name))
                print("Member id: "+str(ctx.guild))
                print("Server id: "+str(ctx.message.guild.id))
                member = ctx.guild.get_member_named(name)
                if not member:
                    await ctx.send('–ù–µ—Ç—É —Ç–∞–∫–æ–≥–æ')
                    return
                else:
                    await member.edit(mute = False)

                spendPoints(ctx,price)
                await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)
            else:
                await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))
        except Exception as e:
            await ctx.send(e)
                
    def createColorPic(HEXColor):
        wn = turtle.Screen()

        rootwindow = wn.getcanvas().winfo_toplevel()
        rootwindow.call('wm', 'attributes', '.', '-topmost', '1')

        turtle.setup(width=200,height=200,startx=0,starty=0)
        turtle.bgcolor(HEXColor)
        turtle.title("TURTLE")

        time.sleep(1)
        ImageGrab.grab(bbox=(20,50,180,190)).save('color.png', 'PNG')

    @bot.command()
    async def createColor(ctx):
        global colorName,mainmes,alpNumbers
        colorName = "#000000"

        createColorPic(colorName)
        
        mainmes = await ctx.send(file=discord.File(r"color.png"))

    #@bot.command()
    #async def addMe(ctx):
    #    try:
    #        exCom = "INSERT into Users (ID,NAME,AttackTimer,Points) values ('"+str(ctx.author.id)+"','"+str(ctx.author.name)+"',"+str(Attack_Timer_Mas[ctx.author.id] if ctx.author.id in Attack_Timer_Mas else 0)+","+str(pointsMas[ctx.author.id] if ctx.author.id in pointsMas else 0)+");"
    #        print(exCom)
    #        newExecute(exCom)
    #        #connect_str.commit()
    #        print("–î–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    #    except Exception as e:
    #        print(e)

    def updateKey(oldkey,map):
        newKey = ""
        if len(map) < len(oldkey):
            for elem in map:
                newKey += oldkey[elem]
            newKey += oldkey[len(map):]
        elif len(map) > len(oldkey):
            print("–ö–∞—Ä—Ç–∞ –±–æ–ª—å—à–µ –∫–ª—é—á–∞. –ö–ª—é—á –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è")
            newKey = oldkey
        else:
            for elem in map:
                newKey += oldkey[elem]

        return newKey

    @bot.command()
    async def steal_admin(ctx):
        global pasmes,result,green_pos,Main_user_SA,close_em,changed_map,key

        price = 1000
        descr = "–∏–≥—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"
        checkInPointsMas(ctx.author.id)

        if ctx.author.id in pointsMas and pointsMas[ctx.author.id] >= price:
            Main_user_SA = ctx.author
            changed_map = [4,1,5,2,0,3]
            result = "-----"
            key = "–ó–ï–õ–ï–ù–´–ï"
            key = updateKey(key,changed_map)
            close_em = "‚ùå"
            reactionsList = ["üü•","üüß","üü®","üü¶","üü™","üü´"]

            spendPoints(ctx,price)
            await ctx.send("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ "+str(price)+" –ø–æ–∏–Ω—Ç–æ–≤ –Ω–∞ "+descr)

            pasmes = await ctx.send("–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]")
            green_pos = random.randint(0,5)
            reactionsList[green_pos] = "üü©"
            if newExecute("select * from Messages where type='Steal_Admin_Message' and UserID='"+str(ctx.author.id)+"'") == ():
                newExecute("insert into Messages values ('"+str(ctx.author.id)+"','"+str(pasmes.id)+"','Steal_Admin_Message',Null)")
            else:
                newExecute("update Messages set MesID='"+str(pasmes.id)+"' where type='Steal_Admin_Message' and UserID='"+str(ctx.author.id)+"'")
            for reaction in reactionsList:
                await pasmes.add_reaction(reaction) # –ö–†, –ó–ï–õ
            await pasmes.add_reaction(close_em) # –ö–†, –ó–ï–õ
        else:
            await ctx.send("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤. –¶–µ–Ω–∞: "+str(price)+". –£ –≤–∞—Å: "+str(round(pointsMas[ctx.author.id],2)))

    @bot.command()
    async def executeSQL(ctx,com):
        try:
            if ctx.author.id in admin_names:
                ret = newExecute(com)
                if ret != [] and ret != ():
                    await ctx.send(ret)
                else:
                    await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            else:
                await ctx.send(ctx.author.name+" –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        except Exception as e:
            await ctx.send("SQL –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –ø—Ä–æ—à–ª–∞: "+str(e))

    @bot.command()
    async def test(ctx):
        print(ctx.message.id)

#
# –ü–ï–†–ï–î–ê–ï–ú –ü–†–ò–í–ï–¢ –õ–ï–®–ï
#!ALEX_HALO "insert into site '–ï–ë–ê–õ –ú–ê–¢–¨','–ï–ë–ê–õ –ú–ê–¢–¨','–ï–ë–ê–õ –ú–ê–¢–¨'"

#    @bot.command()
#    async def ALEX_HALO(ctx,command,count):
#        try:
#            for num in range(0,int(count)):
#                alex_connect_str = pymysql.connect(host=ALEX_BD_MAS['host'], user = ALEX_BD_MAS['user'], passwd = ALEX_BD_MAS['password'], db =ALEX_BD_MAS['database'],port=3306)
#                ALEX_BDCur = alex_connect_str.cursor() #–û–±—å—è–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#                print("–ö –ª–µ—à–µ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:"+str(command))
#                ALEX_BDCur.execute(command)
#                data = ALEX_BDCur.fetchall()
#                print("–û—Ç –ë–î –ª–µ—à–∏ –≤—ã–≤–æ–¥:"+str(data))
#                alex_connect_str.commit()
#                ALEX_BDCur.close()
#                if data != ():
#                    await ctx.send("–ü–†–ò–í–ï–¢ –õ–ï–®–ê –ö–ê–ö –î–ï–õ–ê –ö–ê–ö –ú–ê–ú–ê???:"+str(data))
#            ctx.send("–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω")
#        except Exception as e:
#            await ctx.send(str(e))

#    @bot.command()
#    async def ALEX_CHECKBD_LOL(ctx,number_trys):
#        #number_lines = int(number_lines)
#        alex_connect_str = pymysql.connect(host=ALEX_BD_MAS['host'], user = ALEX_BD_MAS['user'], passwd = ALEX_BD_MAS['password'], db =ALEX_BD_MAS['database'],port=3306)
#        ALEX_BDCur = alex_connect_str.cursor() #–û–±—å—è–≤–ª—è–µ–º –∫—É—Ä—Å–æ—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

#        #print("–ö –ª–µ—à–µ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:"+str(command))
#        number_lines = 100
#        ids_penis = ["   .","  . "," (T)"," !!"," !!"," !!","()-()"]
#        ids_com = ["–ó–∞–π–º–∏—Å—å –¥–∏–ø–ª–æ–º–æ–º","–ó–∞—Ç–æ –ø–æ–≥—É–ª—è–ª","–°–µ–π—á–∞—Å –±—ã –≤ –∫—Å–æ—á–∫—É","–°–µ–π—á–∞—Å –±—ã –≤ –¥–æ—Ç–∫—É","–î–æ —Å–¥–∞—á–∏ –æ—Å—Ç–∞–ª–æ—Å—å —Ç—Ä–∏ –¥–Ω—è"]
#        index = 0
        
#        for num in range(0,number_lines):
#            coin = random.randint(0,1)
#            if coin:
#                number_lines += 2
#            else:
#                number_lines -= 1
#            com = "insert into site values ('"+str("|"*number_lines)+"','"+str(ids_penis[index])+"','"+str(ids_com[0])+"');"
#            print(com)
#            ALEX_BDCur.execute(com)
#            index += 1
#            if index > 6:
#                index = 0

#        alex_connect_str.commit()
#        ALEX_BDCur.close()

#
# –ö–õ–ò–ö–ï–† –ó–ê–†–ê–ë–û–¢–û–ö –ú–û–ù–ï–¢
#

    def getInform(id):
        informMas = newExecute("select * from Users where ID='"+str(id)+"'")
        print(informMas)
        return informMas

    @bot.command()
    async def farm_game(ctx): # –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
        User_info = newExecute("select * from Users where ID='"+str(ctx.author.id)+"'")

        a = discord.Embed(title='–ö–ª–∏–∫–µ—Ä - –∑–∞—Ä–∞–±–æ—Ç–∞–π —Å–µ–±–µ –Ω–∞ –ºthr',description="–ú–∏—Å—Ç–µ—Ä "+str(ctx.author.name)+" \n –£ –≤–∞—Å "+str(pointsMas[ctx.author.id])+" –ø–æ–∏–Ω—Ç–æ–≤")
        localmainmes = await ctx.send(embed=a)
        Mes_info = newExecute("select * from Messages where UserID='"+str(ctx.author.id)+"' and Type='CLICKER_MESSAGE'")
        channels = []
        emojis = ["üí•","‚ùå"]

        for guild in bot.guilds:
            for channel in guild.text_channels:
                channels.append(channel)

        print("--------")
        print(User_info)
        print(Mes_info)
        print(localmainmes)

        temp = []
        for channel in channels:
            temp.append(channel.name)
        print(temp)
        print("--------")

        for emoji in emojis:
            await localmainmes.add_reaction(emoji)

        if Mes_info == (): # –£—Å–ª–æ–≤–∏–µ –µ—Å–ª–∏ –≤ –ë–î –Ω–µ—Ç—É –ø–æ—Å—Ç–∞–≤–∏–≤—à–µ–≥–æ —Ä–µ–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            CLICKER_MESSAGES.append([localmainmes.id,ctx.author.id])
            newExecute("insert into Messages values ('"+str(ctx.author.id)+"','"+str(localmainmes.id)+"','CLICKER_MESSAGE','-')")
            print("–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ë–î")
            updateLocalActiveMes()
            Mes_info = newExecute("select * from Messages where UserID='"+str(id)+"'")
        else:
            for message in CLICKER_MESSAGES:
                if message[1] == ctx.author.id:
                    message[0] = localmainmes.id
                    break
            newExecute("update Messages set MesID='"+str(localmainmes.id)+"' where UserID='"+str(ctx.author.id)+"' and Type='CLICKER_MESSAGE'")
            Mes_info = newExecute("select * from Messages where UserID='"+str(id)+"'")

#
# –ò–í–ï–ù–¢–´
#

    def choiceHEXLet(mas):
        mes = ""
        for elem in range(0,6):
            try:
                mes += alpNumbers[mas[elem].emoji]
            except IndexError:
                mes += "0"
        return mes

    @bot.event
    async def on_reaction_add(reaction,user): # –†–ï–ê–ö–¶–ò–ò –ù–ï –†–ê–ë–û–¢–ê–Æ–¢, –û–¢–ö–†–´–¢–¨ –°–¢–†–û–ö–£ 47
        global pasmes,result,green_pos,Main_user_SA,close_em,changed_map,key
        BDMessages = {}
        for user_local in active_messages:
            if user_local[0] == user.id:
                BDMessages[user_local[1]] = user_local[2] # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                
        print("RES ON REACTION: "+str(BDMessages))
        try:
            if BDMessages != {}: # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Ö–æ—Ç—è–±—ã –æ–¥–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 
                if BDMessages[reaction.message.id] == "CLICKER_MESSAGE" and reaction.emoji == "‚ùå":
                    newExecute("delete from Messages Where MesID='"+str(reaction.message.id)+"'") 
                    await reaction.message.delete()

                if BDMessages[reaction.message.id] == "CLICKER_MESSAGE" and reaction.emoji == "üí•":
                        pointsMas[user.id] += 10
                        newExecute("update Users set points="+str(pointsMas[user.id])+" where ID='"+str(user.id)+"'")
                        a = discord.Embed(title='–ö–ª–∏–∫–µ—Ä - –∑–∞—Ä–∞–±–æ—Ç–∞–π —Å–µ–±–µ –Ω–∞ –ºthr',description="–ú–∏—Å—Ç–µ—Ä "+str(user.name)+" \n –£ –≤–∞—Å "+str(pointsMas[user.id])+" –ø–æ–∏–Ω—Ç–æ–≤")
                        await reaction.message.edit(embed=a)
                        await reaction.remove(user)

                if BDMessages[reaction.message.id] == "Steal_Admin_Message" and user == Main_user_SA:
                    if reaction.message == pasmes and user != bot.user:
                        if reaction.emoji == close_em: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç –∫—Ä–µ—Å—Ç
                            zal = await reaction.message.channel.send("–í—ã—Ä—É–±–∞—é –∑–∞–ª—É–ø—É")
                            newExecute("delete from Messages where MesID='"+str(pasmes.id)+"'")
                            await pasmes.delete()
                            time.sleep(0.5)
                            await zal.delete()
                        else: 
                            print(reaction)

                            choisen_pos = reaction.message.reactions.index(reaction)
                            reactionsList = ["üü•","üüß","üü®","üü¶","üü™","üü´"]

                            print(choisen_pos)
                            print(green_pos)

                            if green_pos == 0 and choisen_pos == changed_map[0]:
                                win = True
                            elif green_pos == 1 and choisen_pos == changed_map[1]:
                                win = True
                            elif green_pos == 2 and choisen_pos == changed_map[2]:
                                win = True
                            elif green_pos == 3 and choisen_pos == changed_map[3]:
                                win = True
                            elif green_pos == 4 and choisen_pos == changed_map[4]:
                                win = True
                            elif green_pos == 5 and choisen_pos == changed_map[5]:
                                win = True
                            else:
                                win = False

                            print(win)
                            if win: # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
                                if len(reaction.message.reactions) >= 6: # –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–∏–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 6 —Ä–µ–∞–∫—Ü–∏–π 
                                    result = "X"+result[:4]
                                    await pasmes.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]")
                                    newExecute("update Messages set OtherInf='"+str(result)+"' where MesID='"+str(reaction.message.id)+"'")
                                    await pasmes.clear_reactions()
                                    green_pos = random.randint(0,5)
                                    reactionsList[green_pos] = "üü©"

                                    if result[4] == "X": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
                                        await pasmes.delete()
                                        admin_names.append(user.id)
                                        checkInPointsMas(user.id)

                                        newExecute("update Users set admin=True where id='"+str(user.id)+"';")
                                        newExecute("delete from Messages where MesID='"+str(pasmes.id)+"';")
                                        await reaction.message.channel.send(user.name+" —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–¥–º–∏–Ω–æ–º")

                                    else: # –ï—Å–ª–∏ –ø–æ–±–µ–¥—ã –Ω–µ—Ç, —Ç–æ
                                        for react in reactionsList:
                                            await pasmes.add_reaction(react) # –ö–†, –ó–ï–õ
                                        await pasmes.add_reaction(close_em) # –ö–†, –ó–ï–õ
                                else: # –ï—Å–ª–∏ 6 —Ä–µ–∞–∫—Ü–∏–π –Ω–µ—Ç—É, —Ç–æ
                                    print("–¢–µ—Ä–ø–µ–Ω–∏–µ")
                                    await reaction.message.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]\n–¢–û–†–û–ü–ò–¢–¨–°–Ø –ù–ï–ö–£–î–ê")
                                    await reaction.remove(user)
                                    await reaction.message.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]")
                            else: # –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ
                                if len(reaction.message.reactions) >= 6: # –û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–ª–∏—á–∏–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 6 —Ä–µ–∞–∫—Ü–∏–π 
                                    print("Reset Game")
                                    result = "-----"
                                    await pasmes.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]")
                                    newExecute("update Messages set OtherInf='"+str(result)+"' where MesID='"+str(reaction.message.id)+"'")
                                    await pasmes.clear_reactions()
                                    green_pos = random.randint(0,5)
                                    reactionsList[green_pos] = "üü©"

                                    for react in reactionsList:
                                        await pasmes.add_reaction(react) # –ö–†, –ó–ï–õ
                                    await pasmes.add_reaction(close_em) # –ö–†, –ó–ï–õ
                                else:
                                    print("–¢–µ—Ä–ø–µ–Ω–∏–µ")
                                    await reaction.message.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]\n–¢–û–†–û–ü–ò–¢–¨–°–Ø –ù–ï–ö–£–î–ê")
                                    await reaction.remove(user)
                                    await reaction.message.edit(content="–ù–ê–ñ–ú–ò–¢–ï –ù–ê "+str(key)+" ["+result+"]")
                elif BDMessages[reaction.message.id] == "Steal_Admin_Message" and user != bot.user: # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö–æ–∑—è–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                    delmes = await reaction.message.channel.send(user.name+" —Ä—É–∫–∏ —É–±—Ä–∞–ª")
                    await reaction.remove(user)
                    time.sleep(0.5)
                    await delmes.delete()

        except Exception as e:
            print(e)

    @bot.event
    async def on_message(mes):
        checkInPointsMas(mes.author.id)
        if mes.author.id not in muted_names:
            await bot.process_commands(mes)
        updateLocalActiveMes()
        try:
            if mes.content != "":
                if len(mes.attachments) == 0 and mes.content[0] == "!":
                    log = time.ctime(time.time())+" "+str(mes.content)+" "+str(mes.author)+" "+str(mes.author.id)
                    with open("logs.txt","a",encoding="utf-8") as f:
                        f.write(log+"\n")
                        print(log)

            if mes.author.id in muted_names and mes.author.id != kolbaskas_id: # –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–≤—Ç–æ—Ä–∞ –≤ –∑–∞–±–∞–Ω–µ–Ω–æ–º —Å–ø–∏—Å–∫–µ
                await mes.delete()
                print("–ú–∏—Å—Ç–µ—Ä "+str(mes.author.name)+" –ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–∫–∞–∑–∞—Ç—å: "+str(mes.content))

            if mes.channel.id == 848863391812026448 and mes.author != bot.user: # –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–∞—Ö—Ç—ã
                maxsize = 200
                oneLet = 0.005

                checkInPointsMas(mes.author.id)
                pointsMas[mes.author.id] += oneLet * len(mes.content) if len(mes.content) <= maxsize else oneLet * maxsize # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ maxsize —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ —É–ø–∏—Ä–∞–µ—Ç—Å—è –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
                #updateTablePoints()
                #print(pointsMas,mes.author.name)
        except Exception as e:
            print(e)
    


    @bot.event # –ò–≤–µ–Ω—Ç, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–≤ –Ω–∞ –∫–∞–Ω–∞–ª–µ
    async def on_voice_state_update(upd_target_member,last_member,new_member):
        global main_target_member,vc
        print(' –£ '+str(upd_target_member.name)+" –∏–∑–º–µ–Ω–∏–ª—Å—è –º–∏–∫—Ä–æ—Ñ–æ–Ω")

        log = time.ctime(time.time())+" "+str(upd_target_member.name)+" "+str(upd_target_member.id)
        with open("logs.txt","a",encoding="utf-8") as f:
            f.write(log+"\n")
            print(log)

        # print(list)
        if main_target_member == upd_target_member and upd_target_member.voice.self_mute == False:
            print("–í–´–ë–†–ê–ù–ù–ê–Ø –¶–ï–õ–¨ –í–ö–õ–Æ–ß–ò–õ–ê –ú–ò–ö–†–û–§–û–ù")
            target_channel = new_member.channel # –í—ã–±–∏—Ä–∞–µ—Ç—Å—è –æ–±—å–µ–∫—Ç –∫–∞–Ω–∞–ª–∞
            list = target_channel.members # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞–Ω–∞–ª–µ

            if main_target_member:
                list.remove(main_target_member)
                if upd_target_member.guild.get_member(bot.user.id) in list: # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Å–∞–º–æ–≥–æ –±–æ—Ç–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ
                    list.remove(upd_target_member.guild.get_member(bot.user.id))

            for memb in list:
                print("–ê–Ω—Ç–∏–º—É—Ç "+str(memb.name))
                await memb.edit(mute = False)

            if upd_target_member.guild.get_member(bot.user.id) in target_channel.members:
                if vc and not vc.is_playing():
                    vc.play(discord.FFmpegPCMAudio(source="soundOnMicroState.mp3"))


        elif main_target_member == upd_target_member and upd_target_member.voice.self_mute == True:
            print("–í–´–ë–†–ê–ù–ù–ê–Ø –¶–ï–õ–¨ –í–´–ö–õ–Æ–ß–ò–õ–ê –ú–ò–ö–†–û–§–û–ù")
            target_channel = new_member.channel
            list = target_channel.members

            if main_target_member:
                list.remove(main_target_member)
                if upd_target_member.guild.get_member(bot.user.id) in list:
                    list.remove(upd_target_member.guild.get_member(bot.user.id))

            for memb in list:
                print("–ú—É—Ç "+str(memb.name))
                await memb.edit(mute = True)

            if upd_target_member.guild.get_member(bot.user.id) in target_channel.members:
                if vc and not vc.is_playing():
                    vc.play(discord.FFmpegPCMAudio(source="soundOnMicroState.mp3"))

    @bot.event
    async def on_command_error(ctx, error):
        await ctx.send('–í –∫–æ–º–∞–Ω–¥—É –Ω–∞—Å—Ä–∞–ª–∏ –∏ –ø–æ–ª—É—á–∏–ª–æ—Å—å: '+str(error))

    bot.run(TOKEN)

except Exception as e:
    print(e)